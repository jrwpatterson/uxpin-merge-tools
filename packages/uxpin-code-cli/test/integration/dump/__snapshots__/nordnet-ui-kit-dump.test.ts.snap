// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The --dump option run for the nordnet-ui-kit repository prints the JSON describing the full repository 1`] = `
"{
	components: [
		{
			dirPath: 'src/components/alert',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/alert/alert.jsx'
			},
			documentation: {
				path: 'src/components/alert/alert.md'
			},
			name: 'Alert',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/animate',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/animate/animate.jsx'
			},
			documentation: {
				path: 'src/components/animate/animate.md'
			},
			name: 'Animate',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/avatar',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/avatar/avatar.jsx'
			},
			documentation: {
				path: 'src/components/avatar/avatar.md'
			},
			name: 'Avatar',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/badge',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/badge/badge.jsx'
			},
			documentation: {
				path: 'src/components/badge/badge.md'
			},
			name: 'Badge',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/button',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/button/button.jsx'
			},
			documentation: {
				path: 'src/components/button/button.md'
			},
			name: 'Button',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/dropdown',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/dropdown/dropdown.jsx'
			},
			documentation: {
				path: 'src/components/dropdown/dropdown.md'
			},
			name: 'Dropdown',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/flag',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/flag/flag.jsx'
			},
			documentation: {
				path: 'src/components/flag/flag.md'
			},
			name: 'Flag',
			properties: [
				{
					description: '',
					isRequired: false,
					name: 'className',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: 'A valid 2-character country code',
					isRequired: false,
					name: 'countryCode',
					defaultValue: {
						value: ''
					},
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'ca'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'de'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'fr'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'ru'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'gb'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'dk'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'fi'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'no'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'se'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'us'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'jp'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'cn'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'eu'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'CA'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'DE'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'FR'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'RU'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'GB'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'DK'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'FI'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'NO'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'SE'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'US'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'JP'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'CN'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'EU'
									}
								}
							]
						}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'secondaryCountryCode',
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'ca'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'de'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'fr'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'ru'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'gb'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'dk'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'fi'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'no'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'se'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'us'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'jp'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'cn'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'eu'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'CA'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'DE'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'FR'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'RU'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'GB'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'DK'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'FI'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'NO'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'SE'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'US'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'JP'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'CN'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'EU'
									}
								}
							]
						}
					}
				},
				{
					description: 'Unitless pixel value',
					isRequired: false,
					name: 'size',
					defaultValue: {
						value: 32
					},
					type: {
						name: 'number',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'style',
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'round',
					defaultValue: {
						value: false
					},
					type: {
						name: 'boolean',
						structure: {}
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/icon',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/icon/icon.jsx'
			},
			documentation: {
				path: 'src/components/icon/icon.md'
			},
			name: 'Icon',
			properties: [
				{
					description: '',
					isRequired: false,
					name: 'className',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'style',
					defaultValue: {
						value: {
							pointerEvents: 'none'
						}
					},
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: 'Unitless pixel value',
					isRequired: false,
					name: 'width',
					defaultValue: {
						value: 16
					},
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'string',
									structure: {}
								},
								{
									name: 'number',
									structure: {}
								}
							]
						}
					}
				},
				{
					description: 'Unitless pixel value',
					isRequired: false,
					name: 'height',
					defaultValue: {
						value: 16
					},
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'string',
									structure: {}
								},
								{
									name: 'number',
									structure: {}
								}
							]
						}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'viewBox',
					defaultValue: {
						value: '0 0 16 16'
					},
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'fill',
					defaultValue: {
						value: '#222'
					},
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'stroke',
					defaultValue: {
						value: '#222'
					},
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'strokeWidth',
					defaultValue: {
						value: 1
					},
					type: {
						name: 'number',
						structure: {}
					}
				},
				{
					description: undefined,
					isRequired: undefined,
					name: 'aria-hidden',
					defaultValue: {
						value: 'true'
					}
				},
				{
					description: undefined,
					isRequired: undefined,
					name: 'focusable',
					defaultValue: {
						value: 'false'
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/input',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/input/input.jsx'
			},
			documentation: {
				path: 'src/components/input/input.md'
			},
			name: 'Input',
			properties: [
				{
					description: '',
					isRequired: false,
					name: 'className',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'style',
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: 'Needs to be a valid input type',
					isRequired: false,
					name: 'type',
					defaultValue: {
						value: 'text'
					},
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'variant',
					defaultValue: {
						value: 'primary'
					},
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'primary'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'secondary'
									}
								}
							]
						}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'disabled',
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'label',
					type: {
						name: 'node',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'placeholder',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'id',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'value',
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'string',
									structure: {}
								},
								{
									name: 'number',
									structure: {}
								},
								{
									name: 'boolean',
									structure: {}
								},
								{
									name: 'array',
									structure: {}
								},
								{
									name: 'object',
									structure: {}
								}
							]
						}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'onFocus',
					type: {
						name: 'func',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'onBlur',
					type: {
						name: 'func',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'onChange',
					type: {
						name: 'func',
						structure: {}
					}
				},
				{
					description: 'Only used when type === textarea',
					isRequired: false,
					name: 'lineCount',
					type: {
						name: 'number',
						structure: {}
					}
				},
				{
					description: 'Manipulates the value of the input, eg. removing unsupported characters from number inputs',
					isRequired: false,
					name: 'valueFormatter',
					type: {
						name: 'func',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'hasSuccess',
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'hasError',
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'hasWarning',
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'helpText',
					type: {
						name: 'node',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'leftAddon',
					type: {
						name: 'node',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'rightAddon',
					type: {
						name: 'node',
						structure: {}
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/instrument-badge',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/instrument-badge/instrument-badge.jsx'
			},
			documentation: {
				path: 'src/components/instrument-badge/instrument-badge.md'
			},
			name: 'InstrumentBadge',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/labeled-value',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/labeled-value/labeled-value.jsx'
			},
			documentation: {
				path: 'src/components/labeled-value/labeled-value.md'
			},
			name: 'LabeledValue',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/li',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/li/li.jsx'
			},
			documentation: {
				path: 'src/components/li/li.md'
			},
			name: 'Li',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/logo',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/logo/logo.jsx'
			},
			documentation: {
				path: 'src/components/logo/logo.md'
			},
			name: 'Logo',
			properties: [
				{
					description: '',
					isRequired: false,
					name: 'className',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'onlyIcon',
					defaultValue: {
						value: false
					},
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'style',
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'iconColor',
					defaultValue: {
						value: '#00A9EC'
					},
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'textColor',
					defaultValue: {
						value: '#222222'
					},
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'height',
					defaultValue: {
						value: 27
					},
					type: {
						name: 'number',
						structure: {}
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/pane',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/pane/pane.jsx'
			},
			documentation: {
				path: 'src/components/pane/pane.md'
			},
			name: 'Pane',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/progress-bar',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/progress-bar/progress-bar.jsx'
			},
			documentation: {
				path: 'src/components/progress-bar/progress-bar.md'
			},
			name: 'ProgressBar',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/radio-group',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/radio-group/radio-group.jsx'
			},
			documentation: {
				path: 'src/components/radio-group/radio-group.md'
			},
			name: 'RadioGroup',
			properties: [
				{
					description: 'The value to be selected',
					isRequired: false,
					name: 'selectedValue',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: 'The name of the checkbox elements, leave blank to set names on child elements',
					isRequired: true,
					name: 'name',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'onChange',
					type: {
						name: 'func',
						structure: {}
					}
				},
				{
					description: 'Elements of type \`<Input type=\\"checkbox\\" />\`',
					isRequired: true,
					name: 'children',
					type: {
						name: 'node',
						structure: {}
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/segmented-control',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/segmented-control/segmented-control.jsx'
			},
			documentation: {
				path: 'src/components/segmented-control/segmented-control.md'
			},
			name: 'SegmentedControl',
			properties: [
				{
					description: '@ignore',
					isRequired: true,
					name: 'classes',
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'children',
					type: {
						name: 'node',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'onChange',
					type: {
						name: 'func',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'className',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'style',
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'name',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: true,
					name: 'type',
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'radio'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'checkbox'
									}
								}
							]
						}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'value',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'variant',
					defaultValue: {
						value: 'primary'
					},
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'primary'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'secondary'
									}
								}
							]
						}
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/shareville-logo',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/shareville-logo/shareville-logo.jsx'
			},
			documentation: {
				path: 'src/components/shareville-logo/shareville-logo.md'
			},
			name: 'SharevilleLogo',
			properties: [
				{
					description: '',
					isRequired: false,
					name: 'onlyIcon',
					defaultValue: {
						value: false
					},
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'height',
					defaultValue: {
						value: 27
					},
					type: {
						name: 'number',
						structure: {}
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/spinner',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/spinner/spinner.jsx'
			},
			documentation: {
				path: 'src/components/spinner/spinner.md'
			},
			name: 'Spinner',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/table',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/table/table.jsx'
			},
			documentation: {
				path: 'src/components/table/table.md'
			},
			name: 'Table',
			properties: [
				{
					description: '@ignore',
					isRequired: true,
					name: 'classes',
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'className',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'children',
					type: {
						name: 'node',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'size',
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'xs'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'sm'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'md'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'lg'
									}
								}
							]
						}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'minWidth',
					defaultValue: {
						value: 700
					},
					type: {
						name: 'number',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'style',
					type: {
						name: 'object',
						structure: {}
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/tbody',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/tbody/tbody.jsx'
			},
			name: 'Tbody',
			properties: [
				{
					description: '@ignore',
					isRequired: true,
					name: 'classes',
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'className',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'children',
					type: {
						name: 'node',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'style',
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'size',
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'xs'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'sm'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'md'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'lg'
									}
								}
							]
						}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'colorAlternateRows',
					defaultValue: {
						value: true
					},
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: 'Unitless pixel value',
					isRequired: false,
					name: 'maxHeight',
					type: {
						name: 'number',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'border',
					defaultValue: {
						value: false
					},
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'borderTop',
					defaultValue: {
						value: false
					},
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'borderRight',
					defaultValue: {
						value: false
					},
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'borderBottom',
					defaultValue: {
						value: false
					},
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'borderLeft',
					defaultValue: {
						value: false
					},
					type: {
						name: 'boolean',
						structure: {}
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/td',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/td/td.jsx'
			},
			name: 'Td',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/tfoot',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/tfoot/tfoot.jsx'
			},
			name: 'Tfoot',
			properties: [
				{
					description: '@ignore',
					isRequired: true,
					name: 'classes',
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'className',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'children',
					type: {
						name: 'node',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'size',
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'xs'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'sm'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'md'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'lg'
									}
								}
							]
						}
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/th',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/th/th.jsx'
			},
			name: 'Th',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/thead',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/thead/thead.jsx'
			},
			name: 'Thead',
			properties: [
				{
					description: '@ignore',
					isRequired: true,
					name: 'classes',
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'className',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'children',
					type: {
						name: 'node',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'size',
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'xs'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'sm'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'md'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'lg'
									}
								}
							]
						}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'variant',
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'primary'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'secondary'
									}
								}
							]
						}
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/tooltip',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/tooltip/tooltip.jsx'
			},
			documentation: {
				path: 'src/components/tooltip/tooltip.md'
			},
			name: 'Tooltip',
			properties: [],
			examples: []
		},
		{
			dirPath: 'src/components/tr',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/tr/tr.jsx'
			},
			name: 'Tr',
			properties: [
				{
					description: '@ignore',
					isRequired: true,
					name: 'classes',
					type: {
						name: 'object',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'className',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'children',
					type: {
						name: 'node',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'size',
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'xs'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'sm'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'md'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'lg'
									}
								}
							]
						}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'border',
					defaultValue: {
						value: false
					},
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'variant',
					type: {
						name: 'union',
						structure: {
							elements: [
								{
									name: 'literal',
									structure: {
										value: 'primary'
									}
								},
								{
									name: 'literal',
									structure: {
										value: 'secondary'
									}
								}
							]
						}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'sticky',
					defaultValue: {
						value: false
					},
					type: {
						name: 'boolean',
						structure: {}
					}
				},
				{
					description: 'Unitless pixel value: if there are other sticky elements at the top of the page, use this to compensate',
					isRequired: false,
					name: 'stickyOffset',
					defaultValue: {
						value: 0
					},
					type: {
						name: 'number',
						structure: {}
					}
				}
			],
			examples: []
		},
		{
			dirPath: 'src/components/ul',
			implementation: {
				framework: 'reactjs',
				lang: 'javascript',
				path: 'src/components/ul/ul.jsx'
			},
			documentation: {
				path: 'src/components/ul/ul.md'
			},
			name: 'Ul',
			properties: [
				{
					description: '',
					isRequired: false,
					name: 'children',
					type: {
						name: 'node',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'style',
					type: {
						name: 'string',
						structure: {}
					}
				},
				{
					description: '',
					isRequired: false,
					name: 'className',
					type: {
						name: 'string',
						structure: {}
					}
				}
			],
			examples: []
		}
	],
	name: ''
}
warning Cannot serialize component properties in:
src/components/alert/alert.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/animate/animate.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/avatar/avatar.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/badge/badge.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/button/button.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/dropdown/dropdown.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot parse type of a property 'aria-hidden' in:
src/components/icon/icon.jsx

warning Cannot parse type of a property 'focusable' in:
src/components/icon/icon.jsx

warning Cannot serialize component properties in:
src/components/instrument-badge/instrument-badge.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/labeled-value/labeled-value.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/li/li.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/pane/pane.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/progress-bar/progress-bar.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/spinner/spinner.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/td/td.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/th/th.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

warning Cannot serialize component properties in:
src/components/tooltip/tooltip.jsx
Error: Multiple exported component definitions found.
    at Context.exportDeclaration (../../../../node_modules/react-docgen/dist/resolver/findExportedComponentDefinition.js:116:13)
    at Context.invokeVisitorMethod (../../../../node_modules/ast-types/lib/path-visitor.js:344:49)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:196:32)
    at NodePath.each (../../../../node_modules/ast-types/lib/path.js:101:26)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:219:18)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at visitChildren (../../../../node_modules/ast-types/lib/path-visitor.js:246:25)
    at Visitor.PVp.visitWithoutReset (../../../../node_modules/ast-types/lib/path-visitor.js:204:20)
    at Visitor.PVp.visit (../../../../node_modules/ast-types/lib/path-visitor.js:133:29)
    at Object.visit (../../../../node_modules/ast-types/lib/path-visitor.js:101:55)

"
`;
